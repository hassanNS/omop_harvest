define(["jquery","underscore","backbone"],function(t,e,i){var n=function(t){var e="";if(t.concept&&(e+="c"+t.concept),t.field&&(e+="f"+t.field),!e)throw new Error("Cannot generate id for filter");return e},s=i.Model.extend({constructor:function(t,e){t&&!t.id&&(t[this.idAttribute]=n(t)),i.Model.prototype.constructor.call(this,t,e)},generateId:function(t){return n(t)},clear:function(t){var i=e.clone(this.attributes);delete i.id,delete i.field,delete i.concept,this.set(i,e.defaults({unset:!0},t))},sync:function(){},apply:function(t){this.trigger("apply",this,t)},unapply:function(t){this.trigger("unapply",this,t)},toJSON:function(i){i=e.defaults(i||{},{id:!1});var n=t.extend(!0,{},this.attributes);return i.id||delete n[this.idAttribute],n},isEnabled:function(){return this.get("enabled")!==!1},toggleEnabled:function(){this.set("enabled",!this.isEnabled())}}),o=i.Collection.extend({model:s,constructor:function(t,n){n=e.defaults({parse:!0},n),i.Collection.prototype.constructor.call(this,t,n)},sync:function(){},apply:function(t){this.trigger("apply",this,t)},unapply:function(t){this.trigger("unapply",this,t)},parse:function(t){if(e.isArray(t))e.each(t,function(t){t.id||(t.id=this.model.prototype.generateId(t))});else{var i=t||{};if(t=[],i.field){var n=this.model.prototype.generateId(i);t.push(e.extend({id:n},i))}else if(i.children){var s=i.concept;e.each(i.children,function(i){void 0!==s&&(i=e.extend({concept:s},i)),t=t.concat(this.parse(i))},this)}}return t}});return{Filter:s,Filters:o}});
//@ sourceMappingURL=filters.js.map