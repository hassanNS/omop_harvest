define(["underscore","highcharts"],function(t,e){var i,n,s,o,r;return n=function(t){var i;return i=e.getOptions().colors,i[t%i.length]},i=/\d{4}-\d{2]-\d{2]/,o=function(t){var e,i,n;return n=parseInt(t.substr(0,4)),i=parseInt(t.substr(5,2))-1,e=parseInt(t.substr(8,2)),Date.UTC(n,i,e)},r=function(t,i,s){var r,a,l,h,u,c,d,p,f,g,v,m,y,_,w,b,x,C,k,$,E,S,T,P,O,A,N,j,I,q,D,V,F,R,M,L,W,z;if(i.length>2)throw new Error("3-dimensional charts are not supported.                Specify which field the series applies to.");if(!i)throw new Error("The field instances must be supplied");for(S=[],I=[],E=i[0],j=i[1],T=E.get("name"),$=E.get("enumerable")||"boolean"===E.get("simple_type"),P="date"===E.get("simple_type")?"datetime":"linear",j?(q=j.get("name"),N=j.get("enumerable")||"boolean"===j.get("simple_type"),D="date"===j.get("simple_type")?"datetime":"linear"):(q="Frequency",N=!1,D="linear"),$&&N?(a="scatter",S.push(" "),I.push(" ")):a=!j||$||N?N?"scatter":"datetime"===P||"datetime"===D?"line":"column":"scatter",w={},l=t.clustered,W=t.data,c=F=0,M=W.length;M>F;c=++F)y=W[c],C=null!=s?y.values.slice(s,s+1)[0]:"",(_=w[C])?(_.data.push(y),_.stats.min=Math.min(_.stats.min,y.count),_.stats.max=Math.max(_.stats.max,y.count),_.stats.sum+=y.count):(_=w[C]={name:C,stats:{min:y.count,max:y.count,sum:y.count}},_.data=$&&N?[{x:0,y:0,radius:0,sentinel:!0},y]:[y]),k=y.values[0],null===k&&(k="(no data)"),$?(-1===(d=S.indexOf(k.toString()))&&(d=S.push(k.toString())-1),k=d):"datetime"===P&&(k=o(k)),j?(A=y.values[1],null===A&&(A="(no data)"),N?(-1===(d=I.indexOf(A.toString()))&&(d=I.push(A.toString())-1),A=d):"datetime"===D&&(A=o(A))):A=y.count,y.x=k,y.y=A;b=[],$&&N&&(O=S.push(" ")-1,V=I.push(" ")-1),x=0;for(f in w){if(_=w[f],$&&N&&(_.data.push({x:0,y:V,radius:0,sentinel:!0}),_.data.push({x:O,y:V,radius:0,sentinel:!0}),_.data.push({x:O,y:V,radius:0,sentinel:!0})),b.push(_),r=_.stats.avg=_.stats.sum/parseFloat(_.data.length,10),p=_.stats.max,"scatter"===a)for(z=_.data,R=0,L=z.length;L>R;R++)m=z[R],m.sentinel||(g=Math.min(Math.max(parseInt(5*(parseFloat(m.count,10)/r))/10,.05),1),h=e.Color(n(x)).setOpacity(g),m.marker={fillColor:h.get()},$&&(m.marker.radius=7));x++}return u="scatter"===a&&$?b[1]?function(){return"<h5>"+this.series.name+"</h5><br /><b>"+T+":</b> "+this.series.xAxis.categories[this.point.x]+"<br /><b>"+q+":</b> "+this.series.yAxis.categories[this.point.y]}:function(){return"<b>"+T+":</b> "+this.series.xAxis.categories[this.point.x]+"<br /><b>"+q+":</b> "+this.series.yAxis.categories[this.point.y]}:"column"===a&&$?b[1]?function(){return"<h5>"+this.series.name+"</h5><br /><b>"+T+":</b> "+this.series.xAxis.categories[this.point.x]+"<br /><b>"+q+":</b> "+e.numberFormat(parseFloat(this.y))}:function(){return"<b>"+T+":</b> "+this.series.xAxis.categories[this.point.x]+"<br /><b>"+q+":</b> "+e.numberFormat(parseFloat(this.y))}:b[1]?function(){return"<h5>"+this.series.name+"</h5><br /><b>"+T+":</b> "+e.numberFormat(parseFloat(this.x))+"<br /><b>"+q+":</b> "+e.numberFormat(parseFloat(this.y))}:function(){return"<b>"+T+":</b> "+e.numberFormat(parseFloat(this.x))+"<br /><b>"+q+":</b> "+e.numberFormat(parseFloat(this.y))},v={clustered:l,chart:{type:a},title:{text:j?""+T+" vs. "+q:""+T+" "+q},series:b,xAxis:{title:{text:T},type:P},yAxis:{title:{text:q},type:D},tooltip:{formatter:u}},S.length&&(v.xAxis.categories=S),I.length&&(v.yAxis.categories=I),b[1]||(v.legend={enabled:!1}),"scatter"===a&&(v.yAxis.gridLineWidth=0,$||(v.chart.zoomType="xy")),v},s=function(e){var i,n,s,o,r;for(s=[],o=0,r=e.length;r>o;o++)i=e[o],n=t.clone(i),n.x=i.values[0],n.y=null!=i.values[1]?i.values[1]:i.count,s.push(n);return{data:t.sortBy(s,"x")}},{processResponse:r,getSeries:s}});
//@ sourceMappingURL=utils.js.map