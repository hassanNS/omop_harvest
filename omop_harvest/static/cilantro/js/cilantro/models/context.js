define(["underscore","backbone","loglevel","../core","./base","./filters"],function(t,e,i,n,s,o){var r=function(){var e=[];t.each(n.config.get("filters.required"),function(t){e.push(t)});var s=n.config.get("query.concepts.required");return s&&(i.warn('The "query.concepts.required" option is deprecated, use "filters.required" instead with fully qualified lookups.'),t.each(s,function(t){e.push({concept:t})})),e},a=s.Model.extend({options:{saveDelay:300},initialize:function(e,i){e=e||{},this.requiredFilters=r(),this._filters=new o.Filters(e.json,t.defaults({parse:!0},i)),this.filters=new o.Filters(e.json,t.defaults({parse:!0},i)),this.listenTo(this._filters,{apply:this.apply,unapply:this.unapply}),this.listenTo(this.filters,{unapply:this.unapply,"change:enabled":function(){this._save()}}),this.on("change:json",function(e,i,n){this.filters.set(i,t.defaults({parse:!0},n)),n.reset&&this._filters.set(i,t.defaults({parse:!0,remove:!1},n)),this.filters.each(function(t){this.isFilterRequired(t.attributes)?t.set("required",!0):t.unset("required")},this)}),this.on("sync",function(t,e,i){i=i||{},this.validate(),i.silent!==!0&&n.trigger(n.CONTEXT_SYNCED,this,"success")}),this._save=t.debounce(this.save,this.options.saveDelay)},validate:function(){var e=[];return t.each(this.requiredFilters,function(i){var n,s=this.filters.findWhere(i);s?s.isEnabled()||(n="disabled"):n="undefined",n&&e.push(t.extend({reason:n},i))},this),e.length?(n.trigger(n.CONTEXT_INVALID,e),"One or more filters are invalid"):void 0},isFilterRequired:function(e){return t.any(this.requiredFilters,function(i){return t.isEqual(t.pick(e,t.keys(i)),i)})},_apply:function(t,e){var i=t.toJSON({id:!0});i.required=this.isFilterRequired(i);var n=this.filters.get(i.id);n?(n.clear({silent:!0}),n.set(i)):n=this.filters.add(i,e),n.set("enabled",!0,{silent:!0});var s=this._filters.get(n);s.trigger("applied",s,e),n.stopListening(this),n.listenToOnce(this,"request",function(t,e,i){this.trigger("request",this,e,i)}),n.listenToOnce(this,"sync",function(t,e,i){this.trigger("sync",this,this.toJSON(),i)})},apply:function(i,n){i instanceof e.Collection?i=i.slice():t.isArray(i)||(i=[i]),t.each(i,function(t){this._apply(t,n)},this),n&&n.save===!1||this._save()},_unapply:function(t,e){var n=t.toJSON({id:!0});if(this.isFilterRequired(n))return i.debug("skipping unapplying required filter",n),void 0;var s=this.filters.remove(n,e);if(s){var o=this._filters.get(s);o.trigger("unapplied",o,e),s.stopListening(this)}},unapply:function(i,n){i instanceof e.Collection?i=i.slice():t.isArray(i)||(i=[i]),t.each(i,function(t){this._unapply(t,n)},this),n&&n.save===!1||this._save()},define:function(t){var e=this._filters.model.prototype.generateId(t),i=this._filters.get(e);return i||(i=this._filters.create(t)),i},toJSON:function(){var t=s.Model.prototype.toJSON.call(this),e=this.filters.toJSON();return t.json=e.length?{type:"and",children:e}:null,t},isSession:function(){return this.get("session")},isArchived:function(){return this.get("archived")},isFilterApplied:function(t){return void 0!==this.filters.get(t)},hasFilterChanged:function(e,i){var n=this.filters.get(e);if(n)return i||(i=t.keys(e.attributes)),t.any(i,function(i){return!t.isEqual(e.get(i),n.get(i))})}}),h=s.SessionCollection.extend({model:a});return{Context:a,ContextCollection:h}});
//@ sourceMappingURL=context.js.map